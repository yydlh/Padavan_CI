name: Build Padavan

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Build_ChongshengB_Padavan'
        required: true
        default: 'build'
      firmwarever:
        description: 'firmware''s version'
        required: true
        default: '20201015'
      mobileui:
        description: 'whether to apply mobile ui patch for original ui'
        required: true
        default: 'false'
      ssp:
        description: 'whether to apply the patch for download ssp bin from local or remote url'
        required: true
        default: 'false'
      uploadcow:
        description: 'whether to upload firmware to cowtransfer'
        required: true
        default: 'true'
      uploadwet:
        description: 'whether to upload firmware to wettransfer'
        required: true
        default: 'false'
      pushplus:
        description: 'whether to notify through pushplus'
        required: true
        default: 'false'
env:
  REPOSITORY_URL: https://github.com/chongshengB/rt-n56u.git
  TOOLCHAIN_URL: https://github.com/hanwckf/padavan-toolchain/releases/download/v1.1/mipsel-linux-uclibc.tar.xz
  WORK_PATH: /opt/rt-n56u
  TIME_ZONE: Asia/Shanghai
  TARGET_NAME: NEWIFI3
  FIRMWARE_DATEPREFIX: $(date +"%Y%m%d")
  FIRMWARE_AUTHOR: chongshengB
  FIRMWARE_PATH: /opt/firmwares
  Remove_RSSI: false
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot kmod \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin
        sudo timedatectl set-timezone "$TIME_ZONE"
    - name: Clone source code
      run: |
        git clone --depth=1 $REPOSITORY_URL $WORK_PATH
        cd $WORK_PATH/toolchain-mipsel
        mkdir -p toolchain-3.4.x
        wget $TOOLCHAIN_URL
        tar -xvf mipsel-linux-uclibc.tar.xz -C toolchain-3.4.x
    - name: Set golang
      run: |
        cp -f bashScripts/go.sh $(pwd)
        sudo chmod 777 ./go.sh
        bash ./go.sh
    - name: Update v2ray
      run: |
        cp -f bashScripts/v2.sh $(pwd)
        sudo chmod 777 ./v2.sh
        bash ./v2.sh $WORK_PATH/trunk/user/v2ray
    - name: Fix htop build
      run: |
        cp -f htop/htop-3.0.2.tar.gz $WORK_PATH/trunk/user/htop
    - name: Apply mobile compatible
      if: github.event.inputs.mobileui == 'true'
      run: |
        cp -f originalui/main.css $WORK_PATH/trunk/user/www/n56u_ribbon_fixed/bootstrap/css
        cp -f originalui/popup.js $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f originalui/state.js $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
    - name: Recovery SSP bin files download from remote
      if: github.event.inputs.ssp == 'true'
      run: |
        cp -f ssp/shadowsocks.sh $WORK_PATH/trunk/user/shadowsocks/scripts
        cp -f ssp/defaults.c $WORK_PATH/trunk/user/shared
        cp -f ssp/variables.c $WORK_PATH//trunk/user/httpd
        cp -f ssp/Shadowsocks.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cd $WORK_PATH/trunk/user/shared
        sed -i "s#https://cdn.jsdelivr.net/gh/Padavan_CI/ssp/trojan#https://cdn.jsdelivr.net/gh/${{ github.repository_owner }}/Padavan_CI/ssp/trojan#g" ./defaults.c
        sed -i "s#https://cdn.jsdelivr.net/gh/Padavan_CI/ssp/v2ray#https://cdn.jsdelivr.net/gh/${{ github.repository_owner }}/Padavan_CI/ssp/v2ray#g" ./defaults.c
    - name: Remove RSSI
      if: env.Remove_RSSI == 'true'
      run: |
        cp -f removeRSSI/ralink.c $WORK_PATH/trunk/user/httpd
        cp -f removeRSSI/Advanced_ACL2g_Content.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f removeRSSI/Advanced_ACL_Content.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f removeRSSI/Advanced_DHCP_Content.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f removeRSSI/Advanced_Exposed_Content.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f removeRSSI/Advanced_MACFilter_Content.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f removeRSSI/Advanced_URLFilter_Content.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f removeRSSI/Advanced_VirtualServer_Content.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f removeRSSI/client_function.js $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        cp -f removeRSSI/clients.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed/device-map
    - name: Update latest adg
      run: |
        cp -f adg/adguardhome.sh $WORK_PATH/trunk/user/adguardhome
        cp -f adg/defaults.c $WORK_PATH/trunk/user/shared
        cp -f adg/variables.c $WORK_PATH//trunk/user/httpd
        cp -f adg/Advanced_adguardhome.asp $WORK_PATH/trunk/user/www/n56u_ribbon_fixed
        #cd $WORK_PATH/trunk/user/adguardhome
        #sed -i "s#https://cdn.jsdelivr.net/gh/chongshengB/rt-n56u/trunk/user/adguardhome/AdGuardHome#https://cdn.jsdelivr.net/gh/${{ github.repository_owner }}/Padavan_CI/adg/AdGuardHome#g" ./adguardhome.sh
    - name: Custom config
      run: |
        cd $WORK_PATH/trunk
        if [ ! -f configs/templates/$TARGET_NAME.config ] ; then
        echo "configs/templates/${TARGET_NAME}.config not found"
        exit 1
        fi
        cp -f configs/templates/$TARGET_NAME.config .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
        ################################################################################################
        #因不同型号配置功能不一样，所以先把配置项删除，如果你自己要添加其他的，也要写上删除这一条，切记！！！
        ################################################################################################
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER/d' .config #删除配置项SOFTETHERVPN
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT/d' .config #删除配置项SOFTETHERVPN
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD/d' .config #删除配置项SOFTETHERVPN   
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS/d' .config #删除配置项SS plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SSSERVER/d' .config #删除配置项SS server
        sed -i '/CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER/d' .config #删除配置项DNSFORWARDER
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ADBYBY/d' .config #删除配置项adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPC/d' .config #删除配置项adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPS/d' .config #删除配置项adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TUNSAFE/d' .config #删除配置项adbyby plus+
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ALIDDNS/d' .config #删除配置项阿里DDNS
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SMARTDNS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SRELAY/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_KUMASOCKS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_IPT2SOCKS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MICROSOCKS/d' .config
        #校园网相关开始
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MENTOHUST/d' .config #删除配置项MENTOHUST
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT/d' .config #删除配置项SCUTCLIENT
        sed -i '/CONFIG_FIRMWARE_INCLUDE_NAPT66/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MINIEAP/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_DOGCOM/d' .config
        #校园网相关结束
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
        ######################################################################
        #以下选项是定义你需要的功能（y=集成,n=忽略），重新写入到.config文件
        ######################################################################
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER=n" >> .config #SOFTETHERVPN
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT=n" >> .config #SOFTETHERVPN
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD=n" >> .config #SOFTETHERVPN
        #科学相关
        echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=y" >> .config #SS plus+
        echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=y" >> .config #集成v2ray执行文件（3.8M左右)，如果不集成，会从网上下载下来执行，不影响正常使用
        echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=y" >> .config #集成trojan执行文件(1.1M左右)，如果不集成，会从网上下载下来执行，不影响正常使用
        echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> .config # simple-obfs混淆插件
        echo "CONFIG_FIRMWARE_INCLUDE_SSSERVER=n" >> .config #SS server
        echo "CONFIG_FIRMWARE_INCLUDE_KUMASOCKS=y" >> .config #socks5
        #
        echo "CONFIG_FIRMWARE_INCLUDE_IPT2SOCKS=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_MICROSOCKS=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config #可以不集成
        echo "CONFIG_FIRMWARE_INCLUDE_TUNSAFE=n" >> .config #TUNSAFE
        echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config #DNSFORWARDER
        #
        echo "CONFIG_FIRMWARE_INCLUDE_FRPC=n" >> .config #内网穿透FRPC
        echo "CONFIG_FIRMWARE_INCLUDE_FRPS=n" >> .config #内网穿透FRPS
        #
        echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> .config #adbyby plus+
        echo "CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=n" >> .config #KP广告过滤
        #
        echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNS=y" >> .config #smartdns
        echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNSBIN=y" >> .config #smartdns二进制文件
        echo "CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=n" >> .config
        #
        echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config #阿里DDNS
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config #zerotier ~1.3M
        #
        echo "CONFIG_FIRMWARE_INCLUDE_CADDY=n" >> .config #在线文件管理服务
        echo "CONFIG_FIRMWARE_INCLUDE_CADDYBIN=n" >> .config #集成caddu执行文件，此文件有13M,请注意固件大小。如果不集成，会从网上下载下来执行，不影响正常使用
        #
        echo "CONFIG_FIRMWARE_INCLUDE_WYY=y" >> .config #网易云解锁
        echo "CONFIG_FIRMWARE_INCLUDE_WYYBIN=y" >> .config #网易云解锁GO版本执行文件（4M多）注意固件超大小,不集成会自动下载
        #校园网相关开始
        echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config #MENTOHUST
        echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config #SCUTCLIENT
        echo "CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_MINIEAP=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_DOGCOM=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_NAPT66=n" >> .config
        #校园网相关结束
        #########################################################################################
        #自定义添加其它功能请参考源码configs/templates/目录下的config文件。按照上面的格式添加即可
        #格式如下：
        #sed -i '/自定义项/d' .config
        #echo "自定义项=y" >> .config
        sed -i "s/FIRMWARE_BUILDS_REV=.*/FIRMWARE_BUILDS_REV=${{ github.event.inputs.firmwarever }}/g" ./versions.inc
        echo '更新版本号时间'
        #########################################################################################
    - name: Build firmware
      run: |
        cd $WORK_PATH/trunk
        sudo ./clear_tree
        sudo ./build_firmware_modify $TARGET_NAME 0
        echo "FIRMWARE_DATEPREFIX=$(date +"%Y%m%d")" >> $GITHUB_ENV
    - name: Organize firmware files
      id: organize
      run: |
        mkdir -p $FIRMWARE_PATH/
        cd $WORK_PATH/trunk/images
        for firmwarefile in $(ls *.trx)
        do sudo mv $firmwarefile $FIRMWARE_PATH/${FIRMWARE_DATEPREFIX}"_"${FIRMWARE_AUTHOR}"_"$firmwarefile
        done
        cd $FIRMWARE_PATH
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
    - name : Upload packages
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success'
      with:
        name: Padavan-packages
        path: ${{ env.FIRMWARE }}
    - name: Upload firmware to cowtransfer
      if: steps.organize.outputs.status == 'success' && github.event.inputs.uploadcow == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "COWTRANSFER_URL=$(cat cowtransfer.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")" >> $GITHUB_ENV
    - name: Upload firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && github.event.inputs.uploadwet == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "WETRANSFER_URL=$(cat wetransfer.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")" >> $GITHUB_ENV
    - name: Remove obsolete firmwares on artifacts
      uses: c-hive/gha-remove-artifacts@v1.2.0
      if: steps.organizer.outputs.status == 'success'
      with:
        age: '1 day'
        skip-recent: 5
    - name: PushPlus Notification
      uses: vb1980/Action_PushPlus@master
      if: steps.organize.outputs.status == 'success' && github.event.inputs.pushplus == 'true'
      with:
        token: ${{ secrets.PUSHTOKEN }}
        title: ${{ env.TARGET_NAME }}_Build_Completed
        content: Congratulations,<br/>&nbsp;&nbsp;Your **${{ env.TARGET_NAME }}** padavan firmware build completed!<br/>&nbsp;&nbsp;🐮CowTransfer Download Url:${{ env.COWTRANSFER_URL }}<br/>&nbsp;&nbsp;Enjoy it🎈🎁!
